<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.example.demo.modules.sys.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="cn.example.demo.modules.sys.model.entity.SysUser">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="dept" jdbcType="VARCHAR" property="dept"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="id_number" jdbcType="VARCHAR" property="idNumber"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_modify_time" jdbcType="TIMESTAMP" property="lastModifyTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="duty" jdbcType="LONGVARCHAR" property="duty"/>
    </resultMap>
    <resultMap id="BaseResultMapExtension" type="cn.example.demo.modules.sys.model.entity.SysUser"
               extends="BaseResultMap">
        <result column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Example_Where_Clause1">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and t1.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and t1.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and t1.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and t1.${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    user_id, username, password, real_name, avatar, sex, dept, phone, email, id_number,
    create_time, last_modify_time, last_login_time, status, duty
  </sql>
    <select id="selectByExample" parameterType="cn.example.demo.modules.sys.model.entity.SysUserExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectOneByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="selectOneByUserNameExtension" parameterType="java.lang.String" resultMap="BaseResultMapExtension">
        select t1.*, t2.role_id, t3.role
        from sys_user t1 left join sys_user_role t2
        on t1.user_id = t2.user_id
        left join sys_role t3
        on t2.role_id = t3.role_id

        where username = #{username,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByExample" parameterType="cn.example.demo.modules.sys.model.entity.SysUserExample">
        delete from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.example.demo.modules.sys.model.entity.SysUser" useGeneratedKeys="true"
            keyProperty="userId">
    insert into sys_user (avatar, create_time,
      dept, email, last_login_time,
      last_modify_time, password, phone,
      real_name, sex, status,
      username, duty)
    values (#{avatar,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{dept,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP},
      #{lastModifyTime,jdbcType=TIMESTAMP}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT},
      #{username,jdbcType=VARCHAR}, #{duty,jdbcType=LONGVARCHAR})
  </insert>
    <select id="countByExample" parameterType="cn.example.demo.modules.sys.model.entity.SysUserExample"
            resultType="java.lang.Long">
        select count(*) from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective">
        update sys_user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.avatar != null">
                avatar = #{record.avatar,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.dept != null">
                dept = #{record.dept,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.lastLoginTime != null">
                last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastModifyTime != null">
                last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null">
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                password = #{record.status,jdbcType=SMALLINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.duty != null">
                duty = #{record.duty,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample">
        update sys_user
        set user_id = #{record.userId,jdbcType=BIGINT},
        avatar = #{record.avatar,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        dept = #{record.dept,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
        last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
        password = #{record.password,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=VARCHAR},
        password = #{record.status,jdbcType=SMALLINT},
        username = #{record.username,jdbcType=VARCHAR},
        duty = #{record.duty,jdbcType=LONGVARCHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <!--  批量插入  -->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into sys_user
        (username,
        password,
        realName,
        avatar,
        sex,
        dept,
        duty,
        phone,
        email,
        createTime,
        lastModifyTime,
        lastLoginTime,
        status)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.username,jdbcType=VARCHAR},
            #{item.password,jdbcType=VARCHAR},
            #{item.realName,jdbcType=VARCHAR},
            #{item.avatar,jdbcType=VARCHAR},
            #{item.sex,jdbcType=VARCHAR},
            #{item.dept,jdbcType=VARCHAR},
            #{item.duty,jdbcType=LONGVARCHAR}},
            #{item.phone,jdbcType=VARCHAR},
            #{item.email,jdbcType=VARCHAR},
            #{item.createTime,jdbcType="TIMESTAMP"},
            #{item.lastModifyTime,jdbcType="TIMESTAMP"},
            #{item.lastLoginTime,jdbcType="TIMESTAMP"},
            #{item.status,jdbcType=SMALLINT}
            )
        </foreach>
    </insert>
    <select id="selectByExampleExtension" parameterType="cn.example.demo.modules.sys.model.entity.SysUserExample"
            resultMap="BaseResultMapExtension">
        select
        <if test="distinct">
            distinct
        </if>
        t1.*, t2.role_id, t3.role
        from sys_user t1 left join sys_user_role t2
        on t1.user_id = t2.user_id
        left join sys_role t3
        on t2.role_id = t3.role_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by t1.${orderByClause}
        </if>
    </select>

    <!-- 高级检索SQL拼接 -->
    <sql id="Where_Clause">
        <choose>
            <when test="criterion.noValue">
                and ${criterion.condition}
            </when>
            <when test="criterion.singleValue">
                and ${criterion.condition} #{criterion.value}
            </when>
            <when test="criterion.betweenValue">
                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
            </when>
            <when test="criterion.listValue">
                and ${criterion.condition}
                <foreach collection="criterion.value" item="listItem" open="(" close=")"
                         separator=",">
                    #{listItem}
                </foreach>
            </when>
        </choose>
    </sql>
    <sql id="Where_SubQuery_Clause">
        <where>
            <foreach collection="subQuery.criteria" item="criterion">
                <include refid="Where_Clause"/>
            </foreach>
        </where>
    </sql>
    <select id="selectByRetrievalExample" resultMap="BaseResultMap">
        <if test="retrievalExample != null">
            select * from ${retrievalExample.table} ${retrievalExample.tableAlias}
            <where>
                <foreach collection="retrievalExample.orCriteria" item="criteria" separator="or">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <include refid="Where_Clause"/>
                        </foreach>
                        <if test="criteria.isSubQuery">
                            <foreach collection="criteria.subQueries" item="subQuery">
                                <choose>
                                    <when test="subQuery.isExist">
                                        and EXISTS (select 1 from ${subQuery.table} ${subQuery.tableAlias}
                                        <include refid="Where_SubQuery_Clause"/>
                                        )
                                    </when>
                                    <when test="!subQuery.isExist">
                                        and NOT EXISTS (select 1 from ${subQuery.table} ${subQuery.tableAlias}
                                        <include refid="Where_SubQuery_Clause"/>
                                        )
                                    </when>
                                </choose>
                            </foreach>
                        </if>
                    </trim>
                </foreach>
            </where>
        </if>
    </select>
</mapper>
